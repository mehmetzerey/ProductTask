@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/_Layout.cshtml";
}

<div class="content-wrapper">
    <section class="content">
        <div class="row justify-content-center mt-4">
            <div class="col-sm-6">
                <table id="ticketList" class="table table-striped projects">
                </table>
            </div>
        </div>
        <div class="modal fade" id="modal-default2">
            <div class="modal-dialog">
                <div class="modal-content" id="modalContent">
                    <div class="modal-header">
                        <h4 class="modal-title">Ticket Düzenle</h4>
                        <h4 id="AuthCodeError" class="text-danger"></h4>
                        <button type="button" class="close" data-dismiss="modal" id="modalClose" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div id="divSpin"></div>
                        <form class="form-horizontal" id="updateUserForm">
                            <input type="hidden" class="form-control" id="ticketIdFrm" value="" />

                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Subject</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="subjectFrm" value="" />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Status</label>
                                <div class="col-sm-10">
                                    <select class="form-control select2" style="width: 100%;" id="statusFrm">
                                        <option value="1">İşlem Yapıldı</option>
                                        <option value="2">İşlem Yapılmadı</option>
                                        <option value="3">Silindi</option>
                                    </select>
                                </div>
                            </div>
                            <button class="btn btn-secondary" type="submit" id="btnUpdate">Güncelle</button>
                            @*<button class="btn btn-danger" type="button" id="btnDelete">Sil</button>*@
                        </form>
                    </div>
                    <div class="modal-footer justify-content-between">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
                <!-- /.modal-content -->
            </div>
            <!-- /.modal-dialog -->
        </div>
    </section>
</div>
@section Scripts{
    <script type="text/javascript">
        const token = localStorage.getItem('token');
        fetch('http://localhost:5001/api/Ticket', {
            headers: {
                'Authorization': 'Bearer ' + token
            }
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(tickets => {
                let ticketTable = document.getElementById('ticketList');
                ticketTable.innerHTML = '';
                let header = ticketTable.createTHead();
                let row = header.insertRow(0);
                let th = document.createElement('th');
                th.innerHTML = 'ID';
                row.appendChild(th);

                th = document.createElement('th');
                th.innerHTML = 'Kullanıcı';
                row.appendChild(th);

                th = document.createElement('th');
                th.innerHTML = 'Konu';
                row.appendChild(th);

                th = document.createElement('th');
                th.innerHTML = 'Mesaj';
                row.appendChild(th);

                th = document.createElement('th');
                th.innerHTML = 'Tarih';
                row.appendChild(th);

                th = document.createElement('th');
                th.innerHTML = 'Form Durumu';
                row.appendChild(th);

                let tbody = ticketTable.createTBody();
                for (let ticket of tickets) {
                    let tr = tbody.insertRow(-1);
                    let td = tr.insertCell(0);
                    td.innerHTML = ticket.id;

                    td = tr.insertCell(1);
                    td.innerHTML = ticket.customerFullName;

                    td = tr.insertCell(2);
                    td.innerHTML = ticket.subject;

                    td = tr.insertCell(3);
                    td.innerHTML = ticket.message;

                    td = tr.insertCell(4);
                    td.innerHTML = ticket.created;

                    td = tr.insertCell(5);
                    if(ticket.statusId == 1)
                        td.innerHTML = 'İşlem Yapıldı';
                    if(ticket.statusId == 2)
                        td.innerHTML = 'İşlem Yapılmadı';
                    if(ticket.statusId == 3)
                        td.innerHTML = 'Silindi';

                    tr.addEventListener('click', function () {
                        $('#modal-default2').modal('show');
                        editTicket(ticket.id);
                    });
                }
            });

        function editTicket(id) {
            fetch('http://localhost:5001/api/Ticket/' + id, {
                headers: {
                    'Authorization': 'Bearer ' + token
                }
            })
                .then(response => response.json())
                .then(ticket => {
                    let ticketId = document.getElementById('ticketIdFrm');
                    ticketId.value = ticket.id;
                    let subject = document.getElementById('subjectFrm');
                    subject.value = ticket.subject;
                });
        }

        const userUpdateForm = document.getElementById('updateUserForm');
        const btnUpdate = document.getElementById('btnUpdate');

        btnUpdate.addEventListener('click', function (event) {
            event.preventDefault();

            let ticketId = document.getElementById('ticketIdFrm').value;
            let statu = document.getElementById('statusFrm').value;
            let ticket = {
                Id: ticketId,
                StatusId: statu,
            };
            fetch('http://localhost:5001/api/Ticket/', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + token
                },
                body: JSON.stringify(ticket)
            })
                .then(response => {
                    if (response.ok) {
                        alert('Admin updated successfully.');
                    } else {
                        alert('Failed to update admin.');
                    }
                });
        });

        const btnDelete = document.getElementById('btnDelete');

        btnDelete.addEventListener('click', function () {
            let adminId = document.getElementById('adminIdFrm').value;
            fetch('http://localhost:5001/api/User/' + adminId, {
                method: 'DELETE',
                headers: {
                    'Authorization': 'Bearer ' + token
                }
            })
                .then(response => {
                    if (response.ok) {
                        alert('User deleted successfully.');
                    } else {
                        alert('Failed to delete user.');
                    }
                });
        });
    </script>
}